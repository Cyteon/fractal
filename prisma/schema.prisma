// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider     = "prisma-client"
  output       = "../src/generated/prisma"
  moduleFormat = "esm"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id             String          @id @default(uuid())
  email          String          @unique
  password       String
  admin          Boolean         @default(false)
  suspended      Boolean         @default(false)
  tokens         Token[]
  orgMemberships OrgMember[]
  AuditLogEntry  AuditLogEntry[]
}

model Token {
  token     String   @id
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
}

enum Role {
  OWNER
  ADMIN
  MEMBER
}

model OrgMember {
  id        String   @id @default(uuid())
  userId    String
  orgId     String
  role      Role     @default(MEMBER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
  org  Org  @relation(fields: [orgId], references: [id])
}

model Org {
  id                      String    @id @default(uuid())
  name                    String
  slug                    String    @unique
  subscribed              Boolean   @default(false)
  polarCustomerId         String?
  subcriptionMadeByUserId String?
  subscriptionCreatedAt   DateTime?
  subscriptionId          String?

  members       OrgMember[]
  AuditLogEntry AuditLogEntry[]
}

model AuditLogEntry {
  id            String   @id @default(uuid())
  orgId         String
  userId        String
  action        String
  humanReadable String   @default("No description was found, for more information please contact support")
  type          String
  createdAt     DateTime @default(now())

  org  Org  @relation(fields: [orgId], references: [id])
  user User @relation(fields: [userId], references: [id])
}
